# Xamarin.Android
# Build a Xamarin.Android project.
# Add steps that test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  - group: xamarin-android-aab
  - name: buildConfiguration
    value: 'Release'
  - name: outputDirectory
    value: '$(build.binariesDirectory)/$(buildConfiguration)'
  - name: BuildID
    value: '$(Build.BuildID)'

steps:
- checkout: self
  submodules: true

# set version variables because the predefined like $(Year:yy) can't be used in tasks 
- task: PowerShell@2
  name: setvariable
  displayName: 'setting variables MajorVersion, MinorVersion, DayOfMonth'
  inputs:
    targetType: 'inline'
    script: |
      $year=$(Get-Date -Format 'yy')
      Write-Host $year
      Write-Host "##vso[task.setvariable variable=MajorVersion]$year"
      $month=[datetime]::Today.Month.ToString('0') 
      Write-Host $month
      Write-Host "##vso[task.setvariable variable=MinorVersion]$month"
      $day=$(Get-Date -Format 'dd')
      Write-Host $day
      Write-Host "##vso[task.setvariable variable=DayOfMonth]$day"
      $version="$year.$month.$(BuildID).0"
      Write-Host $version
      Write-Host "##vso[task.setvariable variable=version]$version"

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

- task: PowerShell@2
  displayName: 'pump version to $(version)'
  inputs:
    workingDirectory: '$(Build.SourcesDirectory)'
    targetType: 'inline'
    script: |
      Write-Host "Set version: $(version)"
      $version = "$(version)"
      $outputversion = "$(version)"

      # Apply the version to the assembly property files
      $VersionRegex = "\d+\.\d+\.\d+\.\d+"
      $assemblyInfoFiles = gci . -recurse -include "*Properties*","My Project" | 
          ?{ $_.PSIsContainer } | 
          foreach { gci -Path $_.FullName -Recurse -include AssemblyInfo.* }
      
      if($assemblyInfoFiles)
      {
          Write-Host "Will apply $AssemblyVersion to $($assemblyInfoFiles.count) Assembly Info Files."
      
          foreach ($file in $assemblyInfoFiles) {
              $filecontent = Get-Content($file)
              attrib $file -r
              $filecontent -replace $VersionRegex, $version  | Out-File $file utf8
      
              Write-Host "$file.FullName - $version version applied"
          }
      }
      else
      {
          Write-Warning "No Assembly Info Files found."
      }

- task: DownloadSecureFile@1
  name: signingCert
  displayName: 'Download certificate'
  inputs:
   secureFile: '$(signingCert.secureFilePath)'

- task: XamarinAndroid@1
  inputs:
    projectFile: '**/*droid*.csproj'
    outputDirectory: '$(outputDirectory)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '-t:SignAndroidPackage -p:AndroidKeyStore=True -p:AndroidSigningKeyStore=$(keyStore.secureFilePath) -p:AndroidSigningStorePass=$(keystore.password) -p:AndroidSigningKeyAlias=$(key.alias) -p:AndroidSigningKeyPass=$(key.password)'

- task: CopyFiles@2
  displayName: 'Copy deliverables'
  inputs:
    SourceFolder: '$(outputDirectory)'
    Contents: '*.apk'
    TargetFolder: 'drop'

- task: PublishBuildArtifacts@1
  displayName: 'Publish release'
  inputs:
    pathToPublish: 'drop'
    artifactName: 'release'
